#!/usr/bin/env node

const axios = require('axios');

const API_BASE = 'http://localhost:5001/api/v1';

console.log('üß™ QuickPe Complete Feature Test');
console.log('=================================');

async function testAllFeatures() {
    try {
        let adminToken, userToken;

        // 1. Test Authentication
        console.log('\nüîê Testing Authentication...');
        
        // Test admin login
        const adminLogin = await axios.post(`${API_BASE}/auth/signin`, {
            email: 'admin@quickpe.com',
            password: 'admin@quickpe2025'
        });
        adminToken = adminLogin.data.token;
        console.log('‚úÖ Admin login successful');
        
        // Test user login
        const userLogin = await axios.post(`${API_BASE}/auth/signin`, {
            email: 'siddharth@quickpe.com',
            password: 'password123'
        });
        userToken = userLogin.data.token;
        console.log('‚úÖ User login successful');

        // 2. Test Balance Management
        console.log('\nüí∞ Testing Balance Management...');
        
        const balanceResponse = await axios.get(`${API_BASE}/account/balance`, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        const initialBalance = balanceResponse.data.balance;
        console.log(`‚úÖ Current balance: ‚Çπ${initialBalance.toLocaleString()}`);

        // 3. Test Add Money
        console.log('\nüí≥ Testing Add Money...');
        
        const addMoneyResponse = await axios.post(`${API_BASE}/account/deposit`, {
            amount: 5000
        }, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        
        const newBalance = addMoneyResponse.data.balance;
        console.log(`‚úÖ Money added successfully. New balance: ‚Çπ${newBalance.toLocaleString()}`);
        
        if (newBalance === initialBalance + 5000) {
            console.log('‚úÖ Balance calculation correct');
        } else {
            console.log('‚ùå Balance calculation incorrect');
        }

        // 4. Test Transactions List
        console.log('\nüìä Testing Transaction History...');
        
        const transactionsResponse = await axios.get(`${API_BASE}/account/transactions`, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        
        const transactions = transactionsResponse.data.transactions;
        console.log(`‚úÖ Retrieved ${transactions.length} transactions`);
        console.log(`‚úÖ Total transactions: ${transactionsResponse.data.pagination.total}`);

        // 5. Test Money Transfer
        console.log('\nüí∏ Testing Money Transfer...');
        
        try {
            const transferResponse = await axios.post(`${API_BASE}/account/transfer`, {
                toQuickpeId: 'QPK-234567CD', // Arpit's QuickPe ID
                amount: 500,
                description: 'Test transfer from automated script'
            }, {
                headers: { 'Authorization': `Bearer ${userToken}` }
            });
            
            console.log('‚úÖ Transfer successful');
            console.log(`‚úÖ New balance: ‚Çπ${transferResponse.data.newBalance.toLocaleString()}`);
        } catch (error) {
            if (error.response?.data?.message === 'Insufficient balance') {
                console.log('‚ö†Ô∏è Transfer failed due to insufficient balance (expected)');
            } else {
                console.log('‚ùå Transfer failed:', error.response?.data?.message || error.message);
            }
        }

        // 6. Test Notifications
        console.log('\nüîî Testing Notifications...');
        
        const notificationsResponse = await axios.get(`${API_BASE}/notifications`, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        
        const notifications = notificationsResponse.data;
        console.log(`‚úÖ Retrieved ${Array.isArray(notifications) ? notifications.length : 'some'} notifications`);

        // 7. Test Analytics
        console.log('\nüìà Testing Analytics...');
        
        const analyticsResponse = await axios.get(`${API_BASE}/analytics/summary`, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        
        console.log('‚úÖ Analytics data retrieved');
        console.log(`‚úÖ Total transactions: ${analyticsResponse.data.data.totalTransactions}`);

        // 8. Test Audit Logs
        console.log('\nüìã Testing Audit Logs...');
        
        const auditResponse = await axios.get(`${API_BASE}/audit/`, {
            headers: { 'Authorization': `Bearer ${userToken}` }
        });
        
        const auditLogs = auditResponse.data.logs || auditResponse.data;
        console.log(`‚úÖ Retrieved ${Array.isArray(auditLogs) ? auditLogs.length : 'some'} audit logs`);
        if (auditResponse.data.pagination) {
            console.log(`‚úÖ Total audit logs: ${auditResponse.data.pagination.total}`);
        }

        // 9. Test Health Endpoints
        console.log('\nüè• Testing Health Endpoints...');
        
        const healthResponse = await axios.get('http://localhost:5001/health');
        console.log(`‚úÖ Health check: ${healthResponse.data.status}`);
        
        const statusResponse = await axios.get(`${API_BASE}/status`);
        console.log(`‚úÖ API status: ${statusResponse.data.status}`);

        // 10. Final Summary
        console.log('\nüéâ All Tests Completed Successfully!');
        console.log('=====================================');
        console.log('‚úÖ Authentication System');
        console.log('‚úÖ Balance Management');
        console.log('‚úÖ Add Money Functionality');
        console.log('‚úÖ Transaction History');
        console.log('‚úÖ Money Transfer');
        console.log('‚úÖ Notifications System');
        console.log('‚úÖ Analytics Dashboard');
        console.log('‚úÖ Audit Trail System');
        console.log('‚úÖ Health Monitoring');
        
        console.log('\nüöÄ QuickPe is fully operational!');
        console.log('\nüì± Frontend: http://localhost:5173');
        console.log('üîß Backend: http://localhost:5001');
        console.log('üìä Health: http://localhost:5001/health');
        
        console.log('\nüë§ Test Users:');
        console.log('   Admin: admin@quickpe.com / admin@quickpe2025');
        console.log('   User: siddharth@quickpe.com / password123');
        console.log('   User: arpit.shukla@quickpe.com / password123');
        console.log('   User: smriti.shukla@quickpe.com / password123');

    } catch (error) {
        console.error('‚ùå Test failed:', error.response?.data || error.message);
        process.exit(1);
    }
}

// Run all tests
testAllFeatures();
